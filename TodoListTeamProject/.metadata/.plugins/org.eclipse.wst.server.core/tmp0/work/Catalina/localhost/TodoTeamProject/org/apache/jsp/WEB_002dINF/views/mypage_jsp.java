/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.79
 * Generated at: 2023-09-22 05:06:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import TodoReg.User;

public final class mypage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("TodoReg.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>마이페이지</title>\r\n");
      out.write("<style>\r\n");
      out.write(".total {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	border-top: 6px solid #0078d4;\r\n");
      out.write("	margin-top: -8px;\r\n");
      out.write("	/* border: 1px solid black; */\r\n");
      out.write("	font-family: \"돋움\", Dotum, \"맑은 고딕\", \"Malgun Gothic\", \"Apple Gothic\",\r\n");
      out.write("		sans-serif;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".image-logo {\r\n");
      out.write("	width: 97px;\r\n");
      out.write("	height: 79px;\r\n");
      out.write("	margin-top: 45px;\r\n");
      out.write("	margin-bottom: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".wrap {\r\n");
      out.write("	border: solid 2px var(--GRAY125S, #e5e5e5);\r\n");
      out.write("	width: 580px;\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".body {\r\n");
      out.write("	width: 600px;\r\n");
      out.write("	/* border: solid 2px var(--GRAY125S, #e5e5e5); */\r\n");
      out.write("	/* border: 1px solid black; */\r\n");
      out.write("	border-radius: 2px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	font-family: \"Apple SD Gothic Neo\", \"Noto Sans KR\", \"맑은 고딕\",\r\n");
      out.write("		\"Malgun Gothic\", 돋움, Dotum, sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btnmenu {\r\n");
      out.write("	width: 585px;\r\n");
      out.write("	height: 450px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("form{\r\n");
      out.write("	margin:0 auto;\r\n");
      out.write("}\r\n");
      out.write("table{\r\n");
      out.write("\r\n");
      out.write("margin: 24px 0px 0px 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".tag{\r\n");
      out.write("	width: 145px;\r\n");
      out.write("	height:	67px;\r\n");
      out.write("}\r\n");
      out.write(".text{\r\n");
      out.write("	width:328px;\r\n");
      out.write("	border:0px;\r\n");
      out.write("	border-bottom: 1px solid rgba(0, 0, 0, 1);\r\n");
      out.write("	outline: none;\r\n");
      out.write("	margin-left: 15px;\r\n");
      out.write("}\r\n");
      out.write(".btn1{\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	background-color: #7fc3ff;\r\n");
      out.write("	border-radius: 7px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	margin-right: 38px;\r\n");
      out.write("}\r\n");
      out.write(".btn2{\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	background-color: #7fc3ff;\r\n");
      out.write("	border-radius: 7px;\r\n");
      out.write("	border: none;\r\n");
      out.write("}\r\n");
      out.write(".btn1:hover{\r\n");
      out.write("	background-color: #3091e8;\r\n");
      out.write("}\r\n");
      out.write(".btn2:hover{\r\n");
      out.write("	background-color: #3091e8;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
	
User u =(User) request.getAttribute("id"); 

      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"total\">\r\n");
      out.write("		<div class=\"img_header\">\r\n");
      out.write("			<img\r\n");
      out.write("				src=\"https://to-do-cdn.microsoft.com/static-assets/c87265a87f887380a04cf21925a56539b29364b51ae53e089c3ee2b2180148c6/icons/logo.png\"\r\n");
      out.write("				class=\"image-logo\" alt=\"\" />\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"wrap\">\r\n");
      out.write("			<div class=\"body\">\r\n");
      out.write("				<div class=\"btnmenu\">\r\n");
      out.write("					<form method=\"post\" name =\"form\" action=\"mypage.do\">\r\n");
      out.write("				        <table>\r\n");
      out.write("				            <tr>\r\n");
      out.write("				                <td class=\"tag\">아이디</td>\r\n");
      out.write("				                <td><input type=\"text\" name=\"id\"  class=\"text\" value=\"");
      out.print(u.getId() );
      out.write("\" readonly></td>\r\n");
      out.write("				            </tr>\r\n");
      out.write("				            <tr>\r\n");
      out.write("				                <td class=\"tag\">비밀번호</td>\r\n");
      out.write("				                <td><input type=\"password\" name=\"pw\"  class=\"text\" value=\"");
      out.print(u.getPw() );
      out.write("\" readonly></td>\r\n");
      out.write("				            </tr>\r\n");
      out.write("				            <tr>\r\n");
      out.write("				                <td class=\"tag\">이름</td>\r\n");
      out.write("				                <td><input type=\"text\" name=\"name\"  class=\"text\" value=\"");
      out.print(u.getName() );
      out.write("\" readonly></td>\r\n");
      out.write("				            </tr>\r\n");
      out.write("				            <tr>\r\n");
      out.write("				                <td class=\"tag\">생년월일</td>\r\n");
      out.write("				                <td><input type=\"text\" name=\"birth\"  class=\"text\" value=\"");
      out.print(u.getBirth() );
      out.write("\" readonly></td>\r\n");
      out.write("				            </tr>\r\n");
      out.write("				            <tr>\r\n");
      out.write("				                <td class=\"tag\">전화번호</td>\r\n");
      out.write("				                <td><input type=\"text\" name=\"tel\"  class=\"text\" value=\"");
      out.print(u.getTel());
      out.write("\" readonly></td>\r\n");
      out.write("				            </tr>\r\n");
      out.write("				            <tr>\r\n");
      out.write("				                <td colspan=\"2\" class=\"tag\"><input type=\"submit\" class=\"btn1\" value=\"수정하기\">\r\n");
      out.write("				                <input type=\"button\" class=\"btn1\" value=\"회원탈퇴\" onclick = \"return del(this.form)\">\r\n");
      out.write("				                <input type=\"button\" class=\"btn2\" value=\"뒤로가기\" onclick = \"return back()\">\r\n");
      out.write("				                </td>\r\n");
      out.write("				            </tr>\r\n");
      out.write("				        </table>\r\n");
      out.write("				    </form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function back(){\r\n");
      out.write("	window.location.href = 'main.do';\r\n");
      out.write("}\r\n");
      out.write("	\r\n");
      out.write("function del(n){\r\n");
      out.write("	let result = confirm(\"회원탈퇴 하시겠습니까?\");\r\n");
      out.write("	if(result == true){\r\n");
      out.write("		alert(\"정상적으로 처리되었습니다.\");\r\n");
      out.write("		n.action='u_del'; \r\n");
      out.write("		n.submit();\r\n");
      out.write("		return true;\r\n");
      out.write("	}else{\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
